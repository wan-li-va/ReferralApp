{"version":3,"sources":["components/Dashboard/icons/facebook.ico","components/Dashboard/icons/twitter.svg","assets/images/environmentally-friendly.png","assets/images/amazon-fakes.png","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Header.js","components/Dashboard/ProgressBar.js","components/Dashboard/ReferralDisplay.js","components/Dashboard/Rewards.js","components/Dashboard/Social.js","components/Dashboard/NextReward.js","components/Dashboard.js","components/Auth/AuthForms.js","components/Auth.js","components/AboutUs.js","components/FAQ.js","components/AdminPage.js","App.js","index.js","assets/images/assembled.png","assets/images/assembled-small.png","components/Dashboard/icons/instagram.ico"],"names":["module","exports","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","user","uid","db","ref","users","reward","rid","rewards","admins","app","initializeApp","this","database","Header","useState","redirect","setRedirect","useEffect","className","alt","src","require","to","signedIn","isAdmin","Button","style","backgroundColor","variant","onClick","handleSignOut","ProgressComponent","numReferrals","nextAchievement","pct","message","ProgressBar","height","width","now","srOnly","label","ReferralDisplay","code","navigator","clipboard","writeText","Rewards","userRewards","rewardKeys","Object","keys","ct","output","values","map","currentKey","color","includes","Card","name","numRequired","Social","handleSocialShare","target","rel","href","NextReward","num","referrals","nextreward","nextReward","setNumReferrals","setNextAchievement","referralCode","setReferralCode","setRewards","rewardsJson","setRewardsJson","setUserRewards","hasShared","setHasShared","once","then","snapshot","val","sort","a","b","rewardsArr","filter","calcNextAchievement","localRewards","achievements","i","length","id","update","prevAwards","classname","RenderNewUserForm","useRef","Form","onSubmit","event","handleSubmit","Group","controlId","Label","Control","type","placeholder","defaultValue","email","Overlay","current","show","placement","Tooltip","RenderNormalForm","setEmail","isNewUser","setIsNewUser","setShow","e","preventDefault","elements","formEmail","value","refCode","formReferral","checkRefCode","userObjs","userArr","key","push","userObj","handleOldUser","setUser","console","log","handleNewUser","error","substring","0","set","aboutUs","align","faq","HasSharedDisplay","changeInputHandler","Checkbox","checked","inputProps","onChange","RewardsDisplay","rewardKey","boolVal","newArr","updateArr","isGlobalAdmin","setGlobalAdmin","setUsers","selectedUser","setSelectedUser","editedObject","setEditedObject","on","snap","textAlign","display","alignContent","justifyContent","flex","overflow","maxHeight","obj","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","fieldName","charAt","toUpperCase","slice","person","handleUserChange","alert","ad","remove","newAdmins","setID","setSignedIn","authUser","setAuthUser","setIsAdmin","setAdmins","path","component","AboutUs","exact","FAQ","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.20b38705.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.4022e4f6.ico\";","module.exports = __webpack_public_path__ + \"static/media/twitter.7b1ddd91.svg\";","module.exports = __webpack_public_path__ + \"static/media/environmentally-friendly.b4261a06.png\";","module.exports = __webpack_public_path__ + \"static/media/amazon-fakes.3958eb6f.png\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar key = process.env.REACT_APP_KEY;\nconst config = {\n    apiKey: key,\n    authDomain: \"referralapp-9c02a.firebaseapp.com\",\n    databaseURL: \"https://referralapp-9c02a.firebaseio.com\",\n    projectId: \"referralapp-9c02a\",\n    storageBucket: \"referralapp-9c02a.appspot.com\",\n    messagingSenderId: \"120981071250\",\n    appId: \"1:120981071250:web:0f0cc797c9d2c8fe070d4b\",\n    measurementId: \"G-2EH3FEJGEZ\"\n};\n\nexport default class Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        // this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    // *** User API ***\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref('users');\n\n    // *** rewards API ***\n\n    reward = rid => this.db.ref(`rewards/${rid}`);\n\n    rewards = () => this.db.ref('rewards');\n\n    // *** Admin API ***\n\n    admins = () => this.db.ref('admins');\n\n}","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { useState, useEffect } from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport '../styling/Header.css'\n\nconst Header = props => {\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        if (redirect === true) {\n            setRedirect(false);\n        }\n    }, [redirect])\n\n    return (\n        <div className=\"Header\">\n            <h1 className=\"Title\"><img alt=\"reshoe logo\" className=\"Logo\" src={require('../assets/images/assembled.png')}></img></h1>\n            <h1 className=\"SmallTitle\"><img alt=\"reshoe logo\" className=\"Logo\" src={require('../assets/images/assembled-small.png')}></img></h1>\n            <Link className=\"HeaderLink\" to=\"/about\">About Us</Link>\n            <Link className=\"HeaderLink\" to=\"/faq\">FAQ</Link>\n            {props.signedIn ? <Link className=\"HeaderLink\" to=\"/dashboard\">Dashboard</Link> : \"\"}\n            {props.signedIn && props.isAdmin ? <Link className=\"HeaderLink\" to=\"/admin\">Admin Page</Link> : \"\"}\n            {props.signedIn ?\n                <Button style={{ backgroundColor: \"#FFE521\" }}\n                    variant='warning' onClick={() => {\n                        setRedirect(true);\n                        props.handleSignOut()\n                    }}>Sign Out\n                    </Button>\n                : <Button style={{ backgroundColor: \"#FFE521\" }}\n                    variant='warning' onClick={() => {\n                        setRedirect(true);\n                    }}>Sign In</Button>}\n            {redirect ? <Redirect to='/' /> : \"\"}\n        </div>\n    )\n};\n\n\nexport default Header;","import React from 'react';\n\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nimport '../../styling/ProgressBar.css';\n\nconst ProgressComponent = ({ numReferrals, nextAchievement }) => {\n    let pct = (numReferrals / nextAchievement) * 100;\n    let variant = \"info\";\n    let message = \"\";\n    if (pct >= 80) {\n        variant = \"success\";\n        message = \"Almost there! \";\n\n    } else if (pct <= 20) {\n        variant = \"danger\"\n    }\n    return (\n        <div className=\"ProgressBar\">\n            <div className=\"labels\">\n                <p className=\"left-label\">0</p>\n                <p className=\"center-label\">{message}</p>\n                <p className=\"right-label\">{nextAchievement}</p>\n            </div>\n            <ProgressBar style={{ height: \"30px\", width: \"250px\"}} variant={variant} now={pct} srOnly label={numReferrals} />\n        </div>\n    );\n}\nexport default ProgressComponent;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst ReferralDisplay = ({ code }) => {\n\n    return (\n        <div className=\"ReferralDisplay\">\n            <h1 className=\"Code\">{code}</h1>\n            <Button className=\"copyButton\" style={{ backgroundColor: \"#FFE521\" }}\n                variant=\"warning\"\n                onClick={() => { navigator.clipboard.writeText(code) }}>\n                Copy Code\n            </Button>\n        </div>\n    );\n}\n\nexport default ReferralDisplay;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nconst Rewards = ({ rewards, userRewards }) => {\n\n    const rewardKeys = Object.keys(rewards);\n    let ct = -1;\n\n    const display = (currentKey) => {\n        if (userRewards.includes(currentKey))\n            return \"rgb(24, 184, 78, 0.9)\";\n        return \"rgb(232, 90, 85, 0.9)\"\n    }\n\n    let output = Object.values(rewards).map(reward => {\n        ct++;\n        const color = display(rewardKeys[ct]);\n        return (\n            <Card style={{ backgroundColor: color}} className=\"Card\" >\n                <div>You can {reward.name}</div>\n                <div>Complete {reward.numRequired} referrals to receive this reward!</div>\n                {color === \"#18B84E\" && <div>{\"Reward Received!\"}</div>}\n            </Card >\n        )\n    })\n\n    return (\n        <div className=\"Rewards\">\n            <h2 className=\"PossibleRewards\">Possible Rewards</h2>\n            <div className=\"rewardList\">{output} </div>\n        </div>\n    )\n\n}\n\nexport default Rewards","import React from 'react';\n\nimport '../../styling/Social.css';\n\nconst Social = ({ handleSocialShare }) => {\n    return (\n        <div className=\"Social\">\n            <div className=\"share-label\">\n                Click to Share Your Referral!\n            </div>\n            <div className=\"platform-grid\">\n                <a onClick={handleSocialShare} className=\"instagram\" target=\"_blank\" rel=\"noopener noreferrer\"\n                    href=\"https://instagram.com\">\n                    <img src={require(\"./icons/instagram.ico\")} alt=\"instagram.com\"></img>\n                </a>\n                <a onClick={handleSocialShare} className=\"facebook\" target=\"_blank\" rel=\"noopener noreferrer\"\n                    href=\"https://facebook.com\">\n                    <img src={require(\"./icons/facebook.ico\")} alt=\"facebook.com\"></img >\n                </a>\n                <a onClick={handleSocialShare} className=\"twitter\" target=\"_blank\" rel=\"noopener noreferrer\"\n                    href=\"https://twitter.com\"><img src={require(\"./icons/twitter.svg\")} alt=\"twitter.com\"></img>\n                </a>\n            </div>\n        </div >\n    );\n}\n\nexport default Social","import React from 'react'\n\nconst NextReward = ({ rewards, nextAchievement, numReferrals }) => {\n\n    const nextReward = (rewards, nextAchievement) => {\n        let nextreward = { name: \"You have all the possible rewards\" };\n        rewards.map(reward => {\n            if (reward.numRequired === nextAchievement) {\n                nextreward = reward;\n            }\n        })\n        return nextreward;\n    }\n\n    if (nextAchievement) {\n        let num = nextAchievement - numReferrals;\n        let referrals = \"referrals\";\n        if (num === 1)\n            referrals = \"referral\";\n        return (\n            <div className=\"nextReward\">\n                Just {num} more {referrals} until you can {nextReward(rewards, nextAchievement).name}!\n            </div>\n        )\n    }\n    return <div></div>\n}\n\nexport default NextReward","import React, { useState, useEffect } from 'react';\n\nimport ProgressBar from './Dashboard/ProgressBar.js';\nimport ReferralDisplay from './Dashboard/ReferralDisplay.js';\nimport Rewards from './Dashboard/Rewards.js';\nimport Social from './Dashboard/Social.js';\nimport NextReward from './Dashboard/NextReward.js';\n\nimport '../styling/Dashboard.css';\n\nimport { withFirebase } from './Firebase';\n\nconst Dashboard = (props) => {\n    const [numReferrals, setNumReferrals] = useState(24);\n    const [nextAchievement, setNextAchievement] = useState(10);\n    const [referralCode, setReferralCode] = useState(\"CODE\");\n    const [rewards, setRewards] = useState([]);\n    const [rewardsJson, setRewardsJson] = useState({});\n    const [userRewards, setUserRewards] = useState([])\n    const [hasShared, setHasShared] = useState(false);\n\n    useEffect(() => {\n        const { user, firebase } = props;\n        firebase.rewards().once('value')\n            .then(snapshot => {\n                setRewards(Object.values(snapshot.val()).sort(function (a, b) {\n                    if (a.numRequired < b.numRequired)\n                        return -1;\n                    else if (a.numRequired > b.numRequired)\n                        return 1;\n                    else\n                        return 0;\n                }));\n            })\n        if (user) {\n            setNumReferrals(user.numReferrals);\n            setReferralCode(user.referralCode);\n            let rewardsArr = user.rewards.filter(reward => reward !== 'dummy')\n            setUserRewards(rewardsArr);\n            setHasShared(user.hasShared);\n        }\n    }, [props.user])\n\n    useEffect(() => {\n        setNextAchievement(calcNextAchievement());\n    }, [props.user, rewards])\n\n    useEffect(() => {\n        const { user, firebase } = props;\n        if (user) {\n            firebase.rewards().once('value')\n                .then(snapshot => {\n                    let localRewards = snapshot.val();\n                    setRewardsJson(localRewards);\n                    const achievements = Object.values(localRewards);\n                    const keys = Object.keys(localRewards);\n                    for (let i = 0; i < achievements.length; i++) {\n                        if (numReferrals === achievements[i].numRequired && !user.rewards.includes(keys[i])) {\n                            firebase.user(user.id).update({ rewards: [...user.rewards, keys[i]] })\n                            break;\n                        }\n                    }\n                })\n        }\n    }, [props.user, numReferrals])\n\n    const calcNextAchievement = () => {\n        let prevAwards = 0;\n        if (rewards.length > 0) {\n            rewards.map(reward => {\n                if (numReferrals >= reward.numRequired)\n                    prevAwards++;\n                return reward\n            })\n            if (prevAwards < rewards.length)\n                return rewards[prevAwards].numRequired;\n            else\n                return rewards[rewards.length - 1].numRequired;\n        }\n    }\n\n    const handleSocialShare = () => {\n        if (!hasShared) {\n            const { firebase, user } = props;\n            firebase.user(user.id).update({ numReferrals: user.numReferrals + 1, hasShared: true });\n        }\n    }\n\n    return (\n        <div className=\"Dashboard\">\n            <Rewards classname=\"Rewards\" rewards={rewardsJson} userRewards={userRewards} />\n            <div className=\"displayMainPanel\">\n                <div className=\"displayProgress\">\n                    <ProgressBar\n                        numReferrals={numReferrals}\n                        nextAchievement={nextAchievement} />\n                    <NextReward className=\"nextReward\"\n                        numReferrals={numReferrals}\n                        nextAchievement={nextAchievement}\n                        rewards={rewards}\n                    />\n\n                </div>\n                <ReferralDisplay className=\"ReferralDisplay\" code={referralCode} />\n                <Social className=\"Social\"\n                    handleSocialShare={handleSocialShare}\n                    referralCode={referralCode}\n                    hasShared={hasShared} />\n\n\n            </div>\n        </div>\n    );\n}\nexport default withFirebase(Dashboard);","import React, { useRef } from 'react';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/ToolTip';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './AuthForms.css';\n\nconst RenderNewUserForm = props => {\n    const target = useRef(null);\n\n    return (\n        <div className=\"form-page\">\n            <Form className=\"form\" onSubmit={event => props.handleSubmit(event)}>\n                <Form.Group controlId='formEmail' >\n                    <Form.Label>Enter your email address!</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' defaultValue={props.email}\n                        className=\"email-form\" />\n                </Form.Group>\n                <Form.Group controlId='formReferral'>\n                    <Form.Label>Enter a referral code if applicable</Form.Label>\n                    <Form.Control type='text' placeholder='Enter Referral Code' ref={target} />\n                    <Overlay target={target.current} show={props.show} placement='top'>\n                        {props => (<Tooltip id='overlay-error' {...props}>\n                            Please put in a correct referral code\n                        </Tooltip>)}\n                    </Overlay>\n                </Form.Group>\n                <Button variant='secondary' type='submit'>Submit!</Button>\n            </Form>\n        </div>\n    );\n}\n\nconst RenderNormalForm = props => {\n    const target = useRef(null);\n\n    return (\n        <div className=\"form-page\">\n            <Form className=\"form\" onSubmit={event => props.handleSubmit(event)}>\n                <Form.Group controlId='formEmail' >\n                    <Form.Label>Enter your email address!</Form.Label>\n                    <Form.Control className=\"email-form\" type='email' placeholder='Enter email' />\n                    <Overlay target={target.current} show={props.show} placement='top'>\n                        {props => (<Tooltip id='overlay-error' {...props}>\n                            Please put in an email!\n                        </Tooltip>)}\n                    </Overlay >\n                </Form.Group>\n                <Button variant='secondary' type='submit'>Submit!</Button>\n            </Form>\n        </div>\n    );\n}\nexport { RenderNewUserForm, RenderNormalForm };","import React, { useState } from 'react';\nimport { withFirebase } from './Firebase';\nimport { Redirect } from 'react-router-dom';\n\nimport { RenderNewUserForm, RenderNormalForm } from './Auth/AuthForms';\n\nconst Auth = props => {\n    const [email, setEmail] = useState(\"\");\n    const [isNewUser, setIsNewUser] = useState(false);\n    const [show, setShow] = useState(false);\n\n    /* HandleSubmit takes in a submit event from a form, handles both the sign up and sign in form, and determines whether it is a new user or not\n        @param e event generated from submitting form\n    */\n    const handleSubmit = (e) => {\n        const { firebase } = props;\n        e.preventDefault();\n        let email = e.target.elements.formEmail.value;\n        if (email === '') {\n            setShow(true);\n            return;\n        } else {\n            setShow(false);\n        }\n        setEmail(email);\n        if (!isNewUser)\n            firebase.users().once('value')\n                .then(snapshot => {\n                    let userObjs = snapshot.val();\n                    let userArr = [];\n                    for (let key in userObjs) {\n                        if (key !== 1)\n                            userArr.push(userObjs[key])\n                    }\n                    let user = userArr.filter(userObj => userObj.email === email)\n                    if (user[0]) {\n                        handleOldUser(user[0].id);\n                    } else {\n                        setIsNewUser(true);\n                    }\n                })\n        else {\n            let refCode = e.target.elements.formReferral.value;\n            checkRefCode(email, refCode);\n        }\n\n    }\n\n    /*\n    handleOldUser takes in a user ID and sets the User in parent App.js, allowing for it to find the currently signed in user\n        @param uid User ID\n    */\n    const handleOldUser = (uid) => {\n        props.setUser(uid);\n    }\n\n    /*\n    checkRefCode takes in an email and the referral code the user put in, checks the database to see if the referral is from a valid user \n        @param email user email found earlier\n        @param refCode The referral code that the user signing up used\n    */\n    const checkRefCode = (email, refCode) => {\n        const { firebase } = props;\n        if (refCode !== \"\")\n            firebase.users().once('value')\n                .then(snapshot => {\n                    let userObjs = snapshot.val();\n                    let userArr = [];\n                    console.log(userObjs)\n                    for (let key in userObjs) {\n                        if (key !== \"1\")\n                            userArr.push(userObjs[key])\n                    }\n                    console.log(userArr);\n                    let user = userArr.filter(userObj => userObj.referralCode === refCode);\n                    if (user[0]) {\n                        let id = user[0].id\n                        firebase.user(id).once('value')\n                            .then(snapshot => {\n                                let userObj = snapshot.val();\n                                firebase.user(id).update({\n                                    numReferrals: userObj.numReferrals + 1\n                                })\n                            })\n                        setShow(false);\n                        handleNewUser(email, false);\n                    } else {\n                        setShow(true);\n                    }\n                })\n        else {\n            setShow(false);\n            handleNewUser(email, false);\n        }\n    }\n\n    /*\n    handleNewUser takes in email and a boolen to determine whether or not to go through with the submitted form\n        @param email string that shows the user's email\n        @param error boolean that give condition of whether or not to handle the submitted form\n    */\n    const handleNewUser = (email, error) => {\n        const { firebase } = props;\n        if (!error) {\n            let postRef = firebase.users().push({\n                email: email\n            })\n            let id = postRef.key\n            let userObj = { email: email, id: id, referralCode: id.substring(3), numReferrals: 0, hasShared: false, rewards: { 0: 'dummy' } };\n            firebase.user(id)\n                .set(userObj)\n            props.setUser(id);\n        }\n    }\n\n    return (\n        <div className='Login'>\n            {props.signedIn ? (props.isAdmin ? <Redirect to='/admin' /> : <Redirect to='/dashboard' />)\n                : isNewUser ? <RenderNewUserForm show={show} email={email} handleSubmit={e => handleSubmit(e)} />\n                    : <RenderNormalForm handleSubmit={e => handleSubmit(e)} />}\n        </div>\n    );\n}\nexport default withFirebase(Auth);","import React from 'react';\nimport '../styling/InfoPages.css';\n\nconst aboutUs = () => {\n  return (\n    <div className=\"page\">\n      <img alt=\"environmentally friendly\" className=\"environment-img\" src={require('../assets/images/environmentally-friendly.png')}></img>\n      <h2>Who is ReSHOE?</h2>\n      <h5>We give people superpowers.</h5>\n      <p>Have you ever thought that it was possible to clean the earth as you walked? To help children in need with each step?\n      To buy a new pair of shoes and tell people, \"I take part in saving the planet. My shoes save the planet.\"\n      </p>\n\n      <h2>Why ReSHOE?</h2>\n      <h5>The environment is larger than our wallets.</h5>\n      <p>Here at ReSHOE, we care more about our values than our profits. We are willing to take a hit to our profits if it means\n      our policies can further benefit the environment while satisfying our customers.\n      </p>\n\n      <img alt=\"shoes\" className=\"shoes\" src={require('../assets/images/amazon-fakes.png')} align=\"left\"></img>\n      <h2>What are the benefits of ReSHOE?</h2>\n      <h5>We seek to provide the most comfortable, fitting, and flexible shoes to our consumers while improving the world, one shoe\n        at a time. </h5>\n      <p>For every pair of shoes purchased, ReSHOE will donate a pair to children without sneakers. Not only do you\n      buy YOURSELF a brand new pair of shoes, a child in need will be overzeleous when a brand, shiny new pair is delivered to them\n        as well. </p>\n      <p>Every shoe is made of sustainable material. We do not hurt the environment in the production or development of our products.\n      </p>\n      <p>\n        If you are satisfied with your product but it needs to be repaired, you can send it right back and we will repair them\n        for you, free of charge. Consumer satisfaction is a top priority.\n      </p>\n      <p>\n        When your shoes are worn out, they can be sent back to the company for 10% credit towards buying a new pair. You can\n        happily browse for a new comfortable and sleek look for your feet knowing, rest assured, that your old pair will not\n        end up in a landfill. All shoes sent back to us are recycled and reused, keeping with ReSHOE's values.\n      </p>\n\n\n    </div >\n  );\n}\nexport default aboutUs;","import React from 'react';\n\nimport '../styling/InfoPages.css';\n\nconst faq = () => {\n  return (\n    <div className=\"page\">\n      <div className=\"faq\">\n        <div className=\"text\">\n          <h1>FAQ</h1>\n          <h4>Q: How do I get points?</h4>\n          <p>\n            A: One referral gets you one point,\n            and sharing on social media also gets\n            you one point.\n        </p>\n          <h4>Q: What counts as a referral?</h4>\n          <p>\n            A: When someone makes an account using your\n            referral code.\n      </p>\n          <h4>Q: I shared on social media, why didn't I get a point?</h4>\n          <p>\n            A: You can only get a point from sharing on social\n            media once, so once you've already shared you can't get\n            anymore points.\n      </p>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default faq;","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import Form from 'react-bootstrap/Form';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { withFirebase } from './Firebase';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styling/AdminPage.css'\n\nconst AdminPage = (props) => {\n    const [isGlobalAdmin, setGlobalAdmin] = useState(false);\n    const [users, setUsers] = useState({});\n    // const [admins, setAdmins] = useState({});\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [editedObject, setEditedObject] = useState({});\n    const [rewards, setRewards] = useState(null);\n\n    useEffect(() => {\n        const { user, admins } = props;\n        if (user) {\n            if (admins[0] === user.id) {\n                setGlobalAdmin(true);\n            } else {\n                setGlobalAdmin(false);\n            }\n        }\n    }, [props.user])\n\n    useEffect(() => {\n        const { firebase } = props;\n        firebase.users().on('value', snap => {\n            setUsers(snap.val());\n        })\n    }, [])\n\n    useEffect(() => {\n        const { firebase } = props;\n        firebase.rewards().once('value')\n            .then(snapshot => {\n                setRewards(snapshot.val());\n            })\n    }, [props])\n\n    const handleUserChange = (id) => {\n        const person = id;\n        setSelectedUser(person);\n        setEditedObject(users[person]);\n    }\n\n    const changeInputHandler = (e, key) => {\n        if (key === \"hasShared\" && e.target.checked) {\n            const val = e.target.checked;\n            setEditedObject({ ...editedObject, [key]: val });\n        } else if (!e.target) {\n            setEditedObject({ ...editedObject, rewards: e });\n        }\n        else {\n            const val = e.target.value;\n            setEditedObject({ ...editedObject, [key]: val });\n        }\n    }\n\n    const handleEditUser = () => {\n        props.firebase.user(selectedUser).update(editedObject);\n    }\n\n    const handleClearSelectedUser = () => {\n        setSelectedUser(null);\n    }\n\n    const handleMakeAdmin = () => {\n        const newAdmins = [...props.admins, selectedUser];\n        props.firebase.admins().set(newAdmins);\n    }\n\n    const handleRemoveAdmin = () => {\n        const newAdmins = props.admins.filter(id => selectedUser !== id);\n        props.firebase.admins().set(newAdmins);\n    }\n\n    const handleDeleteUser = () => {\n        if (props.admins.includes(selectedUser)) {\n            if (!isGlobalAdmin) {\n                alert(\"You do not have permission to delete another admin\");\n                return;\n            } else if (selectedUser === props.admins[0]) {\n                alert(\"You cannot delete the global admin.\\nPlease contact the develpment team if you need to do this.\");\n                return;\n            } else {\n                const ad = props.admins.filter(id => id !== selectedUser);\n                props.firebase.admins().set(ad);\n            }\n        }\n        props.firebase.user(selectedUser).remove();\n    }\n\n    return (\n        <div className=\"page\" >\n            <h2 style={{ textAlign: \"center\" }}>Admin Page</h2>\n            Permissions: {isGlobalAdmin ? \"Global Admin\" : \"General Admin\"}\n            {/* <br />Click on user to see information\n            <br />Click 'Edit User' to edit the user */}\n            <div style={{ display: \"flex\", alignContent: \"center\", justifyContent: \"center\" }} >\n                <div style={{ flex: 1, overflow: \"scroll\", maxHeight: \"70vh\" }}>\n                    {/* <Form.Control as=\"select\" htmlSize={10} onChange={handleUserChange}> */}\n                    {users &&\n                        Object.values(users).map(obj => {\n                            return (\n                                <ExpansionPanel  >\n                                    <ExpansionPanelSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\">\n                                        <Typography className=\"heading\">\n                                            {obj.email}\n                                        </Typography>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails className=\"panel\">\n                                        <Typography>\n                                            {Object.keys(obj).map(key => {\n                                                let fieldName = key.charAt(0).toUpperCase() + key.slice(1);\n                                                let display = obj[key];\n                                                if (key === \"hasShared\") {\n                                                    fieldName = \"Has shared on social\";\n                                                    display = obj[key] ? \"yes\" : \"no\";\n                                                } else if (key === \"rewards\") {\n                                                    // console.log(obj[key]);\n                                                    // console.log(rewards);\n                                                    return <div>\n                                                        <b>Rewards: </b>\n                                                        {rewards && obj[key][1] ?\n                                                            obj[key].map(reward => {\n                                                                if (reward !== \"dummy\" && rewards[reward])\n                                                                    return (\n                                                                        <div>{rewards[reward].name}</div>\n                                                                    )\n                                                            })\n                                                            :\n                                                            \"none\"}\n                                                    </div>\n                                                }\n                                                if (key !== 'id')\n                                                    return (\n                                                        <div>\n                                                            <b>{fieldName}:</b> {display}\n                                                        </div>\n                                                    )\n                                            })}\n                                            <div>\n                                                <b>Permissions:</b> {props.admins.includes(obj.id) ? \" Admin\" : \" User\"}\n                                            </div>\n                                            <button onClick={() => handleUserChange(obj.id)}>Edit User</button>\n                                        </Typography>\n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                            );\n                        })}\n                </div>\n                {/* </Form.Control> */}\n                {selectedUser &&\n                    <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n                        <div>\n                            {selectedUser && users && Object.keys(editedObject).map(key => {\n                                // console.log(editedObject);\n                                // console.log(editedObject[key]);\n                                if (key === 'hasShared') {\n                                    return <HasSharedDisplay hasShared={editedObject[key]}\n                                        changeInputHandler={changeInputHandler} />\n                                } else if (key === 'rewards') {\n                                    return <RewardsDisplay changeInputHandler={changeInputHandler}\n                                        rewards={rewards}\n                                        userRewards={editedObject[key]} />\n                                } else if (key !== 'id')\n                                    return (\n                                        <div>\n                                            <label>{key}</label>\n                                            <input type=\"text\" value={editedObject[key]}\n                                                onChange={(e) => changeInputHandler(e, key)} />\n                                        </div>\n                                    )\n                            })}\n                            <div className=\"buttons\">\n                                {selectedUser && <button className=\"option-button\" onClick={handleEditUser}>Save Edit</button>}\n                                <button className=\"option-button\" style={{ backgroundColor: \"red\" }} onClick={handleDeleteUser}>Delete User</button>\n                                <button className=\"option-button\" onClick={handleClearSelectedUser}>Clear Selected User</button>\n                                {isGlobalAdmin && !props.admins.includes(selectedUser) &&\n                                    <button className=\"option-button\" onClick={handleMakeAdmin}>Make General Admin</button>}\n                                {isGlobalAdmin && props.admins.includes(selectedUser) &&\n                                    <button className=\"option-button\" onClick={handleRemoveAdmin}>Remove Admin Status</button>}\n                            </div>\n                        </div>\n                    </div>}\n            </div>\n        </div>\n    )\n}\n\nconst HasSharedDisplay = ({ changeInputHandler, hasShared }) => {\n    return (\n        <div>\n            <label>{\"Has shared on social\"}</label>\n            <Checkbox checked={hasShared}\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                onChange={(e) => changeInputHandler(e, 'hasShared')} />\n        </div >\n    )\n}\n\nconst RewardsDisplay = ({ changeInputHandler, rewards, userRewards }) => {\n    // const [rewardsArr, setRewardsArr] = useState([]);\n\n    const updateArr = (e, rewardKey) => {\n        const boolVal = e.target.checked;\n        let newArr = [...userRewards];\n        if (boolVal) {\n            if (!userRewards.includes(rewardKey)) { // not in array, add it\n                newArr.push(rewardKey);\n            }\n        } else {\n            if (userRewards.includes(rewardKey)) { // in array remove it\n                newArr = newArr.filter(key => key !== rewardKey);\n            }\n        }\n        changeInputHandler(newArr, 'rewards');\n        // setRewardsArr(newArr);\n    }\n\n    let ct = -1;\n    const keys = Object.keys(rewards);\n    return (\n        <div>\n            <label>Rewards:</label>\n            {Object.values(rewards).map(reward => {\n                if (reward !== \"dummy\") {\n                    ct++;\n                    // console.log(keys[ct]);\n                    const key = keys[ct];\n                    return (\n                        <div>\n                            <Checkbox\n                                checked={userRewards.includes(key)}\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                onChange={(e) => updateArr(e, key)} />\n                            {reward.name}\n                        </div>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default withFirebase(AdminPage);","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { withFirebase } from './components/Firebase';\n\nimport Header from './components/Header.js';\nimport Dashboard from './components/Dashboard.js';\nimport Auth from './components/Auth';\nimport AboutUs from './components/AboutUs.js';\nimport FAQ from './components/FAQ.js';\nimport AdminPage from './components/AdminPage.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = ({ firebase }) => {\n  const [id, setID] = useState('3');\n  const [signedIn, setSignedIn] = useState(false);\n  const [authUser, setAuthUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [admins, setAdmins] = useState([]);\n\n  useEffect(() => {\n    if (id !== '3') {\n      let unsubscribe = firebase.users().on('child_changed',\n        snapshot => {\n          if (id === snapshot.val().id) {\n            setAuthUser(snapshot.val());\n          }\n        })\n      firebase.db.ref().on('child_changed',\n        snapshot => {\n          if (snapshot.key === 'admins') {\n            setAdmins(snapshot.val());\n          }\n        })\n      firebase.admins().once('value')\n        .then(snapshot => {\n          setAdmins(snapshot.val());\n        });\n      firebase.user(id).once('value')\n        .then(snapshot => {\n          let userObj = snapshot.val();\n          setAuthUser(userObj);\n          setSignedIn(true);\n        });\n      firebase.admins().once('value')\n        .then(snapshot => {\n          let adminArr = snapshot.val();\n          if (adminArr.includes(id))\n            setIsAdmin(true);\n        })\n    }\n  }, [id])\n\n  const handleSignOut = () => {\n    setID(\"3\");\n    setSignedIn(false);\n    setAuthUser(null);\n    setIsAdmin(false);\n    return <Redirect to='/' />\n  }\n\n  const setUser = (uid) => {\n    setID(uid);\n    setSignedIn(true);\n  }\n\n  const handleRedirect = () => {\n    if (signedIn) {\n      if (isAdmin) {\n        return <div>\n          <Route path='/admin' exact>\n            <AdminPage user={authUser} admins={admins} />\n          </Route>\n          <Route path='/dashboard'>\n            <Dashboard user={authUser} />\n          </Route>\n          <Route path=\"/\" exact >\n            <Auth setUser={uid => setUser(uid)} signedIn={signedIn} />\n          </Route>\n        </div>\n      } else {\n        return <div>\n          <Route path='/dashboard'>\n            <Dashboard user={authUser} />\n          </Route>\n          <Route path=\"/\" exact >\n            <Auth setUser={uid => setUser(uid)} signedIn={signedIn} />\n          </Route>\n          <Redirect to='/dashboard' />\n        </div>\n      }\n    } else {\n      return (\n        <Route path=\"/\"  >\n          <Auth setUser={uid => setUser(uid)} signedIn={signedIn} />\n        </Route>);\n    }\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header signedIn={signedIn} handleSignOut={() => handleSignOut()} isAdmin={isAdmin} />\n        <Switch>\n          <Route path=\"/about\" component={AboutUs} exact />\n          <Route path=\"/faq\" component={FAQ} exact />\n          {handleRedirect()}\n        </Switch>\n      </div>\n    </Router >\n  );\n\n}\nexport default withFirebase(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/assembled.ecf2609b.png\";","module.exports = __webpack_public_path__ + \"static/media/assembled-small.c951a50c.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.7cea17bc.ico\";"],"sourceRoot":""}