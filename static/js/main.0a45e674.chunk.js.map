{"version":3,"sources":["components/Dashboard/instagram.ico","components/Dashboard/facebook.ico","components/Dashboard/twitter.svg","components/Header.js","components/Dashboard/ProgressBar.js","components/Dashboard/ReferralDisplay.js","components/Dashboard/Rewards.js","components/Dashboard/Social.js","components/Dashboard/NextReward.js","components/Dashboard.js","Firebase.js","components/Login.js","components/AboutUs.js","components/FAQ.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","ProgressComponent","numReferrals","nextAchievement","pct","variant","message","left","ProgressBar","style","height","now","srOnly","label","ReferralDisplay","props","copyToClipboard","e","state","code","select","document","execCommand","this","Button","onClick","navigator","clipboard","writeText","Component","Rewards","Social","handleSocialShare","target","rel","href","src","require","NextReward","Dashboard","componentDidMount","setState","prevState","hasShared","referralCode","rewards","userID","classname","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","login","aboutUs","faq","App","path","component","AboutUs","FAQ","exact","Login","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0a45e674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagram.7cea17bc.ico\";","module.exports = __webpack_public_path__ + \"static/media/facebook.4022e4f6.ico\";","module.exports = __webpack_public_path__ + \"static/media/twitter.ba0dc499.svg\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../styling/Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <h1 className=\"Title\">ReSHOE</h1> \r\n            <h4 className=\"Subtitle\">Responsibly Show Hoo Owns the Environment</h4>\r\n            <Link className=\"HeaderLink\" to=\"/ReferralApp/about\">About Us</Link>\r\n            <Link className=\"HeaderLink\" to=\"/ReferralApp/faq\">FAQ</Link>\r\n            <Link className=\"HeaderLink\" to=\"/ReferralApp/dashboard\">Dashboard</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './ProgressBar.css';\r\n\r\nconst ProgressComponent = ({ numReferrals, nextAchievement }) => {\r\n    let pct = (numReferrals / nextAchievement) * 100;\r\n    let variant = \"info\";\r\n    let message = (nextAchievement - numReferrals) + \" \";\r\n    let left = \"points left!\"\r\n    if (nextAchievement - numReferrals === 1) {\r\n        left = \"point left!\";\r\n    }\r\n    message += left;\r\n    if (pct >= 80) {\r\n        variant = \"success\";\r\n        message = \"Almost there! \" + message;\r\n\r\n    } else if (pct <= 20) {\r\n        variant = \"danger\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"labels\">\r\n                <a className=\"left-label\">0</a>\r\n                <a className=\"center-label\">{message}</a>\r\n                <a className=\"right-label\">{nextAchievement}</a>\r\n            </div>\r\n            <ProgressBar style={{ height: \"30px\" }} variant={variant} now={pct} srOnly label={numReferrals} />\r\n        </div>\r\n    );\r\n}\r\nexport default ProgressComponent;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class ReferralDisplay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: \"CODE\"\r\n        }\r\n    }\r\n\r\n    copyToClipboard = (e) => {\r\n        this.state.code.select();\r\n        document.execCommand('copy');\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ReferralDisplay\">\r\n                <h3>{this.state.code}</h3>\r\n                <Button onClick={() => {navigator.clipboard.writeText(this.state.code)}}>Copy</Button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Rewards = () => {\r\n    return (\r\n        <div className=\"Rewards\">Rewards</div>\r\n    )\r\n}\r\n\r\nexport default Rewards","import React from 'react';\r\nimport './Social.css';\r\n\r\nconst Social = ({ handleSocialShare }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"share-label\">\r\n                Click to Share Your Referral!\r\n            </div>\r\n            <div className=\"platform-grid\">\r\n                <a onClick={handleSocialShare} className=\"instagram\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://instagram.com\"><img src={require(\"./instagram.ico\")}></img></a>\r\n                <a onClick={handleSocialShare} className=\"facebook\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://facebook.com\"><img src={require(\"./facebook.ico\")}></img></a>\r\n                <a onClick={handleSocialShare} className=\"twitter\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com\"><img src={require(\"./twitter.svg\")}></img></a>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Social","import React from 'react'\r\n\r\nconst NextReward = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\nexport default NextReward;","import React, { Component } from 'react';\r\nimport ProgressBar from './Dashboard/ProgressBar.js';\r\nimport ReferralDisplay from './Dashboard/ReferralDisplay.js';\r\nimport Rewards from './Dashboard/Rewards.js';\r\nimport Social from './Dashboard/Social.js';\r\nimport NextReward from './Dashboard/NextReward.js';\r\nimport '../styling/Dashboard.css';\r\n\r\nexport default class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            numReferrals: 8,\r\n            nextAchievement: 10,\r\n            referralCode: \"\",\r\n            rewards: {},\r\n            hasShared: false,\r\n        }\r\n    }\r\n\r\n    /*  Person info\r\n        \"id\": {\r\n            referralCode,\r\n            numReferrals,\r\n            hasShared,\r\n            email,\r\n            name\r\n            //stretch: address, referrals\r\n        }\r\n    */\r\n\r\n    componentDidMount = () => {\r\n        /*\r\n        from firebase:\r\n        get current user\r\n            id\r\n        get data we need\r\n        */\r\n    }\r\n\r\n    handleSocialShare = () => {\r\n        this.setState(prevState => {\r\n            if (!prevState.hasShared)\r\n                return {\r\n                    numReferrals: prevState.numReferrals + 1,\r\n                    hasShared: true\r\n                }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            userID\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"Dashboard\">\r\n                <Rewards classname=\"Rewards\" rewards={this.state.rewards} />\r\n                <div className=\"displayMainPanel\">\r\n                    <ReferralDisplay className=\"ReferralDisplay\" code={this.state.referralCode} />\r\n                    <Social\r\n                        handleSocialShare={this.handleSocialShare}\r\n                        referralCode={this.state.referralCode}\r\n                        hasShared={this.state.hasShared} />\r\n                    <div className=\"displayProgress\">\r\n                        <ProgressBar\r\n                            numReferrals={this.state.numReferrals}\r\n                            nextAchievement={this.state.nextAchievement} />\r\n                        <NextReward\r\n                            nextAchievement={this.state.nextAchievement}\r\n                            rewards={this.state.rewards} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nrequire('dotenv').config();\r\nvar key = process.env.REACT_APP_KEY;\r\n\r\nconst config = {\r\n    apiKey: key,\r\n    authDomain: \"referralapp-9c02a.firebaseapp.com\",\r\n    databaseURL: \"https://referralapp-9c02a.firebaseio.com\",\r\n    projectId: \"referralapp-9c02a\",\r\n    storageBucket: \"referralapp-9c02a.appspot.com\",\r\n    messagingSenderId: \"120981071250\",\r\n    appId: \"1:120981071250:web:0f0cc797c9d2c8fe070d4b\",\r\n    measurementId: \"G-2EH3FEJGEZ\"\r\n};\r\n\r\nvar firebaseApp = firebase.initializeApp(config)\r\n\r\nexport default firebaseApp;","import React from 'react';\r\n\r\nconst login = () => {\r\n    return (\r\n        <div>Log in page</div>\r\n    )\r\n}\r\n\r\nexport default login","import React from 'react'\r\n\r\nconst aboutUs = () => {\r\n  return (\r\n    <div>\r\n      <h2>Who is ReSHOE?</h2>\r\n      <h5>We give people superpowers.</h5>\r\n      <p>Have you ever thought that it was possible to clean the earth as you walked? To help children in need with each step?\r\n      To buy a new pair of shoes and tell people, \"I take part in saving the planet. My shoes save the planet.\"\r\n      </p>\r\n\r\n      <h2>Why ReSHOE?</h2>\r\n      <h5>The environment is larger than our wallets.</h5>\r\n      <p>Here at ReSHOE, we care more about our values than our profits. We are willing to take a hit to our profits if it means\r\n      our policies can further benefit the environment while satisfying our customers.\r\n      </p>\r\n\r\n      <h2>What are the benefits of ReSHOE?</h2>\r\n      <h5>We seek to provide the most comfortable, fitting, and flexible shoes to our consumers while improving the world, one shoe\r\n        at a time. </h5>\r\n      <p>For every pair of shoes purchased, ReSHOE will donate a pair to children without sneakers. Not only do you\r\n      buy YOURSELF a brand new pair of shoes, a child in need will be overzeleous when a brand, shiny new pair is delivered to them\r\n        as well. </p>\r\n      <p>Every shoe is made of sustainable material. We do not hurt the environment in the production or development of our products.\r\n      </p>\r\n      <p>\r\n        If you are satisfied with your product but it needs to be repaired, you can send it right back and we will repair them\r\n        for you, free of charge. Consumer satisfaction is a top priority.\r\n      </p>\r\n      <p>\r\n        When your shoes are worn out, they can be sent back to the company for 10% credit towards buying a new pair. You can \r\n        happily browse for a new comfortable and sleek look for your feet knowing, rest assured, that your old pair will not \r\n        end up in a landfill. All shoes sent back to us are recycled and reused, keeping with ReSHOE's values.\r\n      </p>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default aboutUs;","import React from 'react'\r\n\r\nconst faq = () => {\r\n  return (\r\n    <div>\r\n      <h1>FAQ</h1>\r\n      <h4>Q: How do I get points?</h4>\r\n      <p>\r\n        A: One referral gets you one point,\r\n        and sharing on socoal media also gets\r\n        you one point.\r\n        </p>\r\n      <h4>Q: What counts as a referral?</h4>\r\n      <p>\r\n        A: When someone makes an account using your\r\n        referral code.\r\n      </p>\r\n      <h4>Q: I shared on social media, why didn't I get a point?</h4>\r\n      <p>\r\n        A: You can only get a point from sharing from social\r\n        media once, so once you've already shared you can't get\r\n        anymore points.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default faq;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header.js';\r\nimport Dashboard from './components/Dashboard.js';\r\nimport Firebase from './Firebase.js';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from './components/Login.js';\r\nimport AboutUs from './components/AboutUs.js';\r\nimport FAQ from './components/FAQ.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/ReferralApp/dashboard\" component={Dashboard} />\r\n            <Route path=\"/ReferralApp/about\" component={AboutUs} />\r\n            <Route path=\"/ReferralApp/faq\" component={FAQ} />\r\n            <Route path=\"/ReferralApp/\" exact >\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router >\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}